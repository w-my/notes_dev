//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UICollectionViewCell.h"

#import "QNListenNewsPlayerDelegate.h"
#import "QNShareActivityControllerDelegate.h"
#import "UITableViewDataSource.h"
#import "UITableViewDelegate.h"

@class CABasicAnimation, CALayer, CSimpleImageView, NSString, QNEnlargeHitTestButton, QNInteractiveProgressView, QNListNewsItem, QNListTopTipsView, QNListenNewsListViewModel, QNListenNewsPanelView, QNReportParam, UILabel, UITableView, UIView, UIVisualEffectView;

@interface QNListenNewsCollectionViewCell : UICollectionViewCell <UITableViewDataSource, UITableViewDelegate, QNShareActivityControllerDelegate, QNListenNewsPlayerDelegate>
{
    CSimpleImageView *_backImageView;
    UIVisualEffectView *_blurEView;
    NSString *_imageStringURL;
    UITableView *_tableView;
    QNInteractiveProgressView *_progressView;
    UILabel *_timeLabel1;
    UILabel *_timeLabel2;
    QNEnlargeHitTestButton *_playButton;
    QNEnlargeHitTestButton *_preButton;
    QNEnlargeHitTestButton *_nextButton;
    CALayer *_playLoadingLayer;
    UIView *_pageLoadingView;
    CABasicAnimation *_pageLoadingAnimation;
    QNListenNewsPanelView *_panelView;
    UIView *_loadingErrorView;
    QNListTopTipsView *_listTopTipsView;
    QNListNewsItem *_displayItem;
    double _margin;
    _Bool _imageDidLoad;
    QNListenNewsListViewModel *_viewModel;
    NSString *_channelName;
    double _topOffset;
    QNReportParam *_reportParam;
}

@property(copy, nonatomic) NSString *imageStringURL; // @synthesize imageStringURL=_imageStringURL;
@property(nonatomic) _Bool imageDidLoad; // @synthesize imageDidLoad=_imageDidLoad;
@property(nonatomic) __weak QNReportParam *reportParam; // @synthesize reportParam=_reportParam;
@property(nonatomic) double topOffset; // @synthesize topOffset=_topOffset;
@property(copy, nonatomic) NSString *channelName; // @synthesize channelName=_channelName;
@property(nonatomic) __weak QNListenNewsListViewModel *viewModel; // @synthesize viewModel=_viewModel;
- (void).cxx_destruct;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)listenNewsImageLoadedNotification:(id)arg1;
- (void)listenNewsDataItemChangedNotification:(id)arg1;
- (void)listenNewsDataLoadErrorNotification:(id)arg1;
- (void)listenNewsDataLoadFinishNotification:(id)arg1;
- (void)listenNewsPlayer:(id)arg1 playNewVoiceID:(id)arg2;
- (void)listenNewsPlayer:(id)arg1 playTime:(double)arg2 maxTime:(double)arg3;
- (void)listenNewsPlayer:(id)arg1 timerUpdate:(double)arg2;
- (void)listenNewsPlayer:(id)arg1 timerTypeDidChange:(long long)arg2;
- (void)listenNewsPlayer:(id)arg1 rateTypeDidChange:(long long)arg2;
- (void)listenNewsPlayer:(id)arg1 stateDidChange:(long long)arg2;
- (void)_actionTapPanelButton:(long long)arg1;
- (void)_actionTapButton:(id)arg1;
- (void)_progressDidChange:(double)arg1;
- (void)_actionReloadDataGesture:(id)arg1;
- (id)sliderView;
- (void)checkResetModel;
- (void)checkReloadModel;
- (void)setBackImageOfItem:(id)arg1;
- (void)_reportControlEventWithType:(id)arg1;
- (void)_showNextArticleHelp;
- (id)_currentPlayInfoCell;
- (void)_updateCell;
- (void)_updateDataChange;
- (id)_channelID;
- (id)_voiceID;
- (void)_showPageError:(_Bool)arg1;
- (void)_showPageLoading:(_Bool)arg1;
- (void)_setPlayTime:(double)arg1 maxTime:(double)arg2;
- (void)_setPlayButton:(_Bool)arg1;
- (void)_resetCell;
- (void)_displayAllItemInfo;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

