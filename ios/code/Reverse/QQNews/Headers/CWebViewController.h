//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "QNRootViewController.h"

#import "QNNavigationControllerInteractiveGestureDelegate.h"
#import "QNWebViewToolBarDelegate.h"
#import "WKNavigationDelegate.h"

@class NSString, QNWebParam, QNWebView, QNWebViewJSOpenAPI, QNWebViewToolBar;

@interface CWebViewController : QNRootViewController <QNWebViewToolBarDelegate, WKNavigationDelegate, QNNavigationControllerInteractiveGestureDelegate>
{
    _Bool _showWebViewImmediately;
    _Bool _isNeedAuthorized;
    _Bool _autoreloadWhenLoginChangedDisabled;
    struct QNWebViewSettings _webViewSettings;
    QNWebView *_webView;
    QNWebViewJSOpenAPI *_jsOpenAPI;
    QNWebViewToolBar *_toolbar;
    NSString *_requestUrl;
    long long _toolBarType;
    NSString *_callbackUrl;
    QNWebParam *_webViewParam;
}

@property(retain, nonatomic) QNWebParam *webViewParam; // @synthesize webViewParam=_webViewParam;
@property(copy, nonatomic) NSString *callbackUrl; // @synthesize callbackUrl=_callbackUrl;
@property(nonatomic) _Bool autoreloadWhenLoginChangedDisabled; // @synthesize autoreloadWhenLoginChangedDisabled=_autoreloadWhenLoginChangedDisabled;
@property(nonatomic) _Bool isNeedAuthorized; // @synthesize isNeedAuthorized=_isNeedAuthorized;
@property(nonatomic) long long toolBarType; // @synthesize toolBarType=_toolBarType;
@property(nonatomic) _Bool showWebViewImmediately; // @synthesize showWebViewImmediately=_showWebViewImmediately;
@property(nonatomic) struct QNWebViewSettings webViewSettings; // @synthesize webViewSettings=_webViewSettings;
@property(copy, nonatomic) NSString *requestUrl; // @synthesize requestUrl=_requestUrl;
@property(retain, nonatomic) QNWebViewToolBar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) QNWebViewJSOpenAPI *jsOpenAPI; // @synthesize jsOpenAPI=_jsOpenAPI;
@property(readonly, nonatomic) QNWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (_Bool)qnNavigationController:(id)arg1 shouldInteractiveGestureRecognizerBegin:(id)arg2;
- (_Bool)shouldResovleWebViewError:(id)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)p_handleFailWithError:(id)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (long long)do_webView:(id)arg1 decidedPolicyForNavigationAction:(id)arg2;
- (void)cleanupCompletely:(_Bool)arg1;
- (void)webViewToolBar:(id)arg1 itemClickedType:(long long)arg2;
- (_Bool)p_shouldCleanCacheBeforeLoadRequest;
- (void)p_reportH5StatsWithError:(id)arg1;
- (void)p_navigateToLogin:(id)arg1;
- (void)p_handleLogin;
- (struct CGRect)do_frameOfWebView;
- (void)do_viewWillDestroy;
- (id)authorizedRequestUrl:(id)arg1;
- (void)createToolbar;
- (void)configBarItemStatus;
- (double)extraScrollViewBottomInset;
- (void)loadRequestUrl:(id)arg1;
- (void)refresh;
- (void)stopAnimating;
- (void)startAnimating;
- (void)scroll2Top;
- (void)configBarButtons;
- (void)themeChanged:(long long)arg1;
- (void)do_reloadData;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (_Bool)supportAttachMiniPlayerView;
- (void)viewDidLoad;
- (id)initWithParam:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

