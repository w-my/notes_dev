//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "QNRootViewController.h"

#import "QNControllerReuseProtocol.h"
#import "QNListPageCellReportDelegate.h"
#import "QNListViewModelDelegate.h"
#import "QNMainListViewControllerProtocol.h"
#import "SVPullToRefreshViewDelegate.h"
#import "UITableViewDelegate.h"

@class KBAbstractListController<KBListControllerSubclassProtocol>, NSIndexPath, NSString, QNBasicListDataAdapter<QNListDataAdapterSubclassProtocol>, QNBasicListLoader, QNBasicListViewModel<QNBasicListViewModelSubclassProtocol>, QNLayoutTableView, QNListLoaderSuccessResponse, QNListTopTipsView, QNListTopToolBar, TADBaseStreamReportManager, UIButton, UIScrollView, UIView;

@interface KBAbstractListController : QNRootViewController <UITableViewDelegate, SVPullToRefreshViewDelegate, QNListViewModelDelegate, QNControllerReuseProtocol, QNMainListViewControllerProtocol, QNListPageCellReportDelegate>
{
    _Bool _startLoadingAutomatically;
    _Bool _enableShowTopTipsView;
    _Bool _hasNextPage;
    _Bool _isRefreshAllWithTrigger;
    _Bool _isRecoveredFromCache;
    _Bool _lastRequestIsSuccess;
    _Bool _needRefreshAllForPullDown;
    _Bool _preLoadedCache;
    _Bool _didStartDrag;
    float _startContentOffset;
    UIScrollView *_scrollView;
    QNLayoutTableView *_tableView;
    QNBasicListViewModel<QNBasicListViewModelSubclassProtocol> *_viewModel;
    QNBasicListDataAdapter<QNListDataAdapterSubclassProtocol> *_listDataAdapter;
    unsigned long long _refreshMode;
    id <KBRefreshAnimationDelegate> _refreshAnimationDelegate;
    NSIndexPath *_lastSelectedIndexPath;
    long long _refreshType;
    TADBaseStreamReportManager *_adReportManager;
    unsigned long long _channelExperienceMode;
    double _lastRefreshTime;
    KBAbstractListController<KBListControllerSubclassProtocol> *_subClassInstance;
    QNListTopTipsView *_tipView;
    QNListTopTipsView *_bottomTipView;
    UIButton *_jumpToRecommendListButton;
    QNListTopToolBar *_topToolBar;
    UIView *_emptyView;
    QNListLoaderSuccessResponse *_lastResponse;
    long long _pageNumber;
    NSString *_lastRefreshTrigger;
    double _ignoreRefreshAnimationTime;
    double _lastThemeChangedTime;
}

@property(nonatomic) double lastThemeChangedTime; // @synthesize lastThemeChangedTime=_lastThemeChangedTime;
@property(nonatomic) double ignoreRefreshAnimationTime; // @synthesize ignoreRefreshAnimationTime=_ignoreRefreshAnimationTime;
@property(nonatomic) float startContentOffset; // @synthesize startContentOffset=_startContentOffset;
@property(nonatomic) _Bool didStartDrag; // @synthesize didStartDrag=_didStartDrag;
@property(nonatomic) _Bool preLoadedCache; // @synthesize preLoadedCache=_preLoadedCache;
@property(copy, nonatomic) NSString *lastRefreshTrigger; // @synthesize lastRefreshTrigger=_lastRefreshTrigger;
@property(nonatomic) _Bool needRefreshAllForPullDown; // @synthesize needRefreshAllForPullDown=_needRefreshAllForPullDown;
@property(nonatomic) _Bool lastRequestIsSuccess; // @synthesize lastRequestIsSuccess=_lastRequestIsSuccess;
@property(nonatomic) long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(retain, nonatomic) QNListLoaderSuccessResponse *lastResponse; // @synthesize lastResponse=_lastResponse;
@property(retain, nonatomic) UIView *emptyView; // @synthesize emptyView=_emptyView;
@property(retain, nonatomic) QNListTopToolBar *topToolBar; // @synthesize topToolBar=_topToolBar;
@property(retain, nonatomic) UIButton *jumpToRecommendListButton; // @synthesize jumpToRecommendListButton=_jumpToRecommendListButton;
@property(retain, nonatomic) QNListTopTipsView *bottomTipView; // @synthesize bottomTipView=_bottomTipView;
@property(retain, nonatomic) QNListTopTipsView *tipView; // @synthesize tipView=_tipView;
@property(nonatomic) __weak KBAbstractListController<KBListControllerSubclassProtocol> *subClassInstance; // @synthesize subClassInstance=_subClassInstance;
@property(nonatomic) double lastRefreshTime; // @synthesize lastRefreshTime=_lastRefreshTime;
@property(nonatomic) unsigned long long channelExperienceMode; // @synthesize channelExperienceMode=_channelExperienceMode;
@property(retain, nonatomic) TADBaseStreamReportManager *adReportManager; // @synthesize adReportManager=_adReportManager;
@property(nonatomic) _Bool isRecoveredFromCache; // @synthesize isRecoveredFromCache=_isRecoveredFromCache;
@property(nonatomic) long long refreshType; // @synthesize refreshType=_refreshType;
@property(nonatomic) _Bool isRefreshAllWithTrigger; // @synthesize isRefreshAllWithTrigger=_isRefreshAllWithTrigger;
@property(nonatomic) _Bool hasNextPage; // @synthesize hasNextPage=_hasNextPage;
@property(retain, nonatomic) NSIndexPath *lastSelectedIndexPath; // @synthesize lastSelectedIndexPath=_lastSelectedIndexPath;
@property(nonatomic) __weak id <KBRefreshAnimationDelegate> refreshAnimationDelegate; // @synthesize refreshAnimationDelegate=_refreshAnimationDelegate;
@property(nonatomic) unsigned long long refreshMode; // @synthesize refreshMode=_refreshMode;
@property(nonatomic) _Bool enableShowTopTipsView; // @synthesize enableShowTopTipsView=_enableShowTopTipsView;
@property(nonatomic) _Bool startLoadingAutomatically; // @synthesize startLoadingAutomatically=_startLoadingAutomatically;
@property(retain, nonatomic) QNBasicListDataAdapter<QNListDataAdapterSubclassProtocol> *listDataAdapter; // @synthesize listDataAdapter=_listDataAdapter;
@property(retain, nonatomic) QNBasicListViewModel<QNBasicListViewModelSubclassProtocol> *viewModel; // @synthesize viewModel=_viewModel;
@property(retain, nonatomic) QNLayoutTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (void)p_markExposedNews:(id)arg1;
- (void)p_handleUnexposedNewsAfterLoadSuccessWithResponse:(id)arg1;
- (void)p_checkChannelExperienceMode;
- (void)p_reportRemoteRefreshWithResponse:(id)arg1;
- (void)p_reportPreloadedRefresh;
- (void)reportListPageCellPageExposure:(id)arg1 listItem:(id)arg2 parentItem:(id)arg3 pageIndex:(unsigned long long)arg4;
- (double)bottomInsetforMiniPlayerView;
- (void)didLeaveCurrentController:(id)arg1 toController:(id)arg2;
- (void)didComeInCurrentController:(id)arg1 fromController:(id)arg2;
- (id)_controllerStateReusableModule;
- (void)pushControllerStateToReusableDB;
- (_Bool)recoverControllerStateFromReusableDB;
- (_Bool)_shouldRecoverControllerStateWithMemeryInfo:(id)arg1;
- (_Bool)shouldRecoverControllerState;
- (_Bool)_isNewsTab;
@property(readonly, nonatomic) UIView *headerView; // @dynamic headerView;
- (void)_initListDataAdapter;
- (void)_initViewModel;
- (void)_initTableView;
@property(readonly, nonatomic) QNBasicListLoader *listLoader;
- (void)_handleSettingHotEventNotification:(id)arg1;
- (void)_handleSettingReadingModeNotification:(id)arg1;
- (void)themeChanged:(long long)arg1;
- (_Bool)isCurrentTopController;
- (void)setLastSelectedIndexPathByCell:(id)arg1;
- (void)refreshCurrentChannelWithDrag:(id)arg1;
- (void)refreshCurrentChannel;
- (void)cleanupAndRefresh;
- (void)p_showBottomTipsView:(id)arg1;
- (void)p_showTopTipsView:(id)arg1;
- (_Bool)p_needDoCellAnimation:(id)arg1;
- (void)p_handleSearchbarStateChanged:(id)arg1;
- (_Bool)p_isChannelNewsListViewController;
- (void)p_hideSearchBox;
- (void)p_showSearchBox;
- (void)p_hideEmptyView;
- (void)p_showEmptyView;
- (void)_dismissWaitingView;
- (void)_showWaitingView;
- (id)_moduleFeedBackId:(id)arg1;
- (void)p_reportNewsExposureNoRepeatWithListItem:(id)arg1 index:(unsigned long long)arg2 tableViewCellIdentifier:(id)arg3;
- (void)_reportArticleExposureWithKBListItem:(id)arg1 tableViewCellIdentifier:(id)arg2 index:(long long)arg3;
- (long long)qn_refreshListMode;
- (_Bool)_listHasContentItem;
- (void)_infiniteScrolling;
- (void)pullDownToRefresh;
- (void)_pullToRefresh;
- (void)_refreshAllModelIgnoreCache:(_Bool)arg1;
- (void)p_hideRefreshTipViewRemind;
- (void)p_prepareForRefresh;
- (void)_refreshAllModelIgnoreCache:(_Bool)arg1 triggerByUser:(_Bool)arg2;
- (void)_loadFailedHandler:(id)arg1 triggerByUser:(_Bool)arg2;
- (void)_jumpToRecommendList;
- (_Bool)_canShowJumpToRecommendListTip;
- (void)_setInfiniteScrollingViewReachEnd:(_Bool)arg1;
- (void)_stopLoadingAnimation:(_Bool)arg1;
- (void)p_commonActionForTopAndBottomResponse:(id)arg1;
- (void)p_handleSuccessBottomResponse:(id)arg1;
- (void)p_handleSuccessTopResponse:(id)arg1;
- (void)p_handleSuccessAllResponse:(id)arg1;
- (void)p_refreshAllCompletedAnimationWithResponse:(id)arg1;
- (void)p_updateTableHeaderView;
- (void)_loadSuccessHandlerWithCompletionInformation:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (_Bool)isTimeForRefresh;
- (_Bool)shouldRefreshAllWhenPullDown;
- (void)do_loadingFailed;
- (void)scroll2Top;
- (void)do_reloadData;
- (void)do_selectedAsCurrentChannel:(id)arg1;
- (void)do_deselectedAsCurrentChannel:(id)arg1;
- (void)willAppendListItemsWithDirection:(unsigned long long)arg1 viewModel:(id)arg2;
- (void)willReplaceAllListItems:(id)arg1;
- (id)getContentScrollView;
- (void)refreshViewPackUpFinish:(_Bool)arg1;
- (void)p_showRecommendTipView:(id)arg1;
- (void)refreshViewPackUpBegin:(_Bool)arg1;
- (id)getCurrentChannelID;
- (void)scrollViewDidEndScrolling:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)_tryTriggerInfiniteScrollingIfNeed;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)pageTypeForReport;
- (double)preferredScrollViewTopInset;
- (void)p_tryReportCellTimeConsume;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithID:(id)arg1;
- (id)initWithParam:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSString *channelName;
@property(copy, nonatomic) NSString *currentChannelID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

