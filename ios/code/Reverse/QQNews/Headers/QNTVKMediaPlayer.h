//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TVKAdPlayDelegate.h"
#import "TVKCaptureDelegate.h"
#import "TVKMediaPlaybackDelegate.h"
#import "TVKPermissionDelegate.h"

@class NSDate, NSDictionary, NSString, QNVideoContainerView, QNVideoDanmuManager, QNWaitingLoadingView, TVKMediaPlayer, TVKNetVideoInfo, TVKVideoView, UIImage, UIImageView, UIView;

@interface QNTVKMediaPlayer : NSObject <TVKMediaPlaybackDelegate, TVKAdPlayDelegate, TVKCaptureDelegate, TVKPermissionDelegate>
{
    int _preloadedDataSize;
    _Bool _danmuSwitch;
    _Bool _hideLoadingView;
    _Bool _isFirstLoadingFinished;
    _Bool _isSportLive;
    _Bool _isReallyMute;
    _Bool _isCached;
    _Bool _isCheckFHDFormat;
    _Bool _isShowSizeAlert;
    _Bool _isReported;
    _Bool _isPlayAD;
    int _playerState;
    int _playerAdState;
    TVKMediaPlayer *_player;
    UIView *_attachView;
    id <QNTVKMediaPlayerDelegate> _delegate;
    NSString *_currentVid;
    NSString *_defaultDefinition;
    long long _adMode;
    unsigned long long _stretchMode;
    double _currentPlaybackTime;
    QNVideoContainerView *_videoContainer;
    NSDictionary *_extraReportParams;
    NSDictionary *_adParamMap;
    NSDictionary *_adPageInfo;
    NSDate *_userClickToPlayDate;
    TVKNetVideoInfo *_netMediaInfo;
    QNVideoDanmuManager *_danmuManager;
    UIView *_adView;
    UIImageView *_loadingCoverView;
    UIView *_controlView;
    QNWaitingLoadingView *_loadingView;
    UIImage *_screenShot;
    TVKVideoView *_videoView;
    NSDate *_preparedTime;
    NSDate *_preparingTime;
    NSDate *_showVideoTime;
    NSDate *_cgiStartTime;
    NSDate *_cgiEndTime;
    NSDate *_playerCreateStart;
    NSDate *_playerCreateEnd;
    NSDate *_playerSetUrl;
    NSDate *_actionPlayTime;
    NSDictionary *_renderTraceReportParam;
    struct CGSize _naturalSize;
    struct CGRect _playerFrame;
}

+ (unsigned long long)playerVideoGravityWithMode:(unsigned long long)arg1;
+ (void)p_resetLoginInfo;
+ (void)resignLoginInfo;
+ (void)resetLoginInfo;
+ (void)initPlayer;
@property(copy, nonatomic) NSDictionary *renderTraceReportParam; // @synthesize renderTraceReportParam=_renderTraceReportParam;
@property(nonatomic) _Bool isPlayAD; // @synthesize isPlayAD=_isPlayAD;
@property(nonatomic) _Bool isReported; // @synthesize isReported=_isReported;
@property(retain, nonatomic) NSDate *actionPlayTime; // @synthesize actionPlayTime=_actionPlayTime;
@property(retain, nonatomic) NSDate *playerSetUrl; // @synthesize playerSetUrl=_playerSetUrl;
@property(retain, nonatomic) NSDate *playerCreateEnd; // @synthesize playerCreateEnd=_playerCreateEnd;
@property(retain, nonatomic) NSDate *playerCreateStart; // @synthesize playerCreateStart=_playerCreateStart;
@property(retain, nonatomic) NSDate *cgiEndTime; // @synthesize cgiEndTime=_cgiEndTime;
@property(retain, nonatomic) NSDate *cgiStartTime; // @synthesize cgiStartTime=_cgiStartTime;
@property(retain, nonatomic) NSDate *showVideoTime; // @synthesize showVideoTime=_showVideoTime;
@property(retain, nonatomic) NSDate *preparingTime; // @synthesize preparingTime=_preparingTime;
@property(retain, nonatomic) NSDate *preparedTime; // @synthesize preparedTime=_preparedTime;
@property(retain, nonatomic) TVKVideoView *videoView; // @synthesize videoView=_videoView;
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=_naturalSize;
@property(nonatomic) struct CGRect playerFrame; // @synthesize playerFrame=_playerFrame;
@property(nonatomic) _Bool isShowSizeAlert; // @synthesize isShowSizeAlert=_isShowSizeAlert;
@property(retain, nonatomic) UIImage *screenShot; // @synthesize screenShot=_screenShot;
@property(retain, nonatomic) QNWaitingLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) UIView *controlView; // @synthesize controlView=_controlView;
@property(retain, nonatomic) UIImageView *loadingCoverView; // @synthesize loadingCoverView=_loadingCoverView;
@property(retain, nonatomic) UIView *adView; // @synthesize adView=_adView;
@property(retain, nonatomic) QNVideoDanmuManager *danmuManager; // @synthesize danmuManager=_danmuManager;
@property(nonatomic) int playerAdState; // @synthesize playerAdState=_playerAdState;
@property(nonatomic) int playerState; // @synthesize playerState=_playerState;
@property(retain, nonatomic) TVKNetVideoInfo *netMediaInfo; // @synthesize netMediaInfo=_netMediaInfo;
@property(nonatomic) _Bool isCheckFHDFormat; // @synthesize isCheckFHDFormat=_isCheckFHDFormat;
@property(retain, nonatomic) NSDate *userClickToPlayDate; // @synthesize userClickToPlayDate=_userClickToPlayDate;
@property(copy, nonatomic) NSDictionary *adPageInfo; // @synthesize adPageInfo=_adPageInfo;
@property(copy, nonatomic) NSDictionary *adParamMap; // @synthesize adParamMap=_adParamMap;
@property(copy, nonatomic) NSDictionary *extraReportParams; // @synthesize extraReportParams=_extraReportParams;
@property(nonatomic) _Bool isCached; // @synthesize isCached=_isCached;
@property(retain, nonatomic) QNVideoContainerView *videoContainer; // @synthesize videoContainer=_videoContainer;
@property(nonatomic) _Bool isReallyMute; // @synthesize isReallyMute=_isReallyMute;
@property(nonatomic) _Bool isSportLive; // @synthesize isSportLive=_isSportLive;
@property(readonly) _Bool isFirstLoadingFinished; // @synthesize isFirstLoadingFinished=_isFirstLoadingFinished;
@property(readonly, nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(nonatomic) unsigned long long stretchMode; // @synthesize stretchMode=_stretchMode;
@property(nonatomic) long long adMode; // @synthesize adMode=_adMode;
@property(nonatomic) _Bool hideLoadingView; // @synthesize hideLoadingView=_hideLoadingView;
@property(nonatomic) _Bool danmuSwitch; // @synthesize danmuSwitch=_danmuSwitch;
@property(copy, nonatomic) NSString *defaultDefinition; // @synthesize defaultDefinition=_defaultDefinition;
@property(copy, nonatomic) NSString *currentVid; // @synthesize currentVid=_currentVid;
@property(nonatomic) __weak id <QNTVKMediaPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *attachView; // @synthesize attachView=_attachView;
@property(retain, nonatomic) TVKMediaPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)setPlayerStretchMode:(unsigned long long)arg1;
- (void)setReportParamDict:(id)arg1;
- (void)p_reportWithState:(int)arg1;
- (void)reportToMTAMessage:(id)arg1 param:(id)arg2;
- (void)p_reportVideoRenderTraceWithStatus:(long long)arg1;
- (void)stopLoading;
- (void)startLoadingShowCoverView:(_Bool)arg1;
- (void)permissionTimeoutWithMediaPlayer:(id)arg1;
- (void)mediaPlayer:(id)arg1 captureWithId:(int)arg2 width:(double)arg3 height:(double)arg4 image:(id)arg5;
- (void)mediaPlayer:(id)arg1 AdOnPlayMuted:(_Bool)arg2;
- (void)mediaPlayer:(id)arg1 AdfullScreenClicked:(_Bool)arg2;
- (void)onVipLoginClick:(id)arg1;
- (void)mediaPlayer:(id)arg1 preAdStateChanged:(int)arg2 withAdDuration:(double)arg3;
- (void)mediaPlayer:(id)arg1 adLandingInfo:(id)arg2;
- (id)mediaPlayerAdVideoView:(id)arg1;
- (void)mediaPlayer:(id)arg1 infoChanged:(long long)arg2 userInfo:(id)arg3;
- (void)mediaPlayer:(id)arg1 playerMsgChanged:(long long)arg2;
- (_Bool)mediaPlayerCanOfflineToOnline:(id)arg1;
- (void)mediaPlayer:(id)arg1 autoReduceDefinition:(id)arg2 toDefinition:(id)arg3;
- (void)mediaPlayerShouldReduceDefinition;
- (void)mediaPlayer:(id)arg1 videoSizeChangedWithWidth:(long long)arg2 height:(long long)arg3;
- (void)mediaPlayer:(id)arg1 currentPosition:(double)arg2 playablePosition:(double)arg3;
- (void)mediaPlayer:(id)arg1 NetVideoInfo:(id)arg2;
- (void)mediaPlayer:(id)arg1 eventChanged:(int)arg2 withExtraInfo:(id)arg3;
- (void)mediaPlayer:(id)arg1 stateChanged:(int)arg2 withError:(id)arg3;
- (void)p_resetPlayerSetting;
- (void)p_checkFHDFormat;
- (void)playAnotherDefinition:(id)arg1;
- (id)mediaDefinitionList;
- (void)p_showFailedAlert:(id)arg1;
- (void)p_sendPlayerCountDownEventWithCountDown:(long long)arg1 duration:(long long)arg2;
- (void)p_playFailed:(id)arg1;
- (id)p_adItemFromLandingInfo:(id)arg1;
- (void)p_handleVideoPlayTask;
- (_Bool)p_isCurrentPlayer;
- (void)_showToastFileSize;
- (_Bool)commitNewMessage:(id)arg1;
- (void)p_loadDanmu;
- (void)p_onDanmuRegisterFinish:(_Bool)arg1;
- (void)p_registerDanmu;
- (void)rotateVRcamera:(float)arg1 andY:(float)arg2;
- (void)setVRMode:(unsigned long long)arg1;
- (void)setVREnable:(_Bool)arg1;
- (id)getDeviceID;
@property(readonly, nonatomic) int adState; // @dynamic adState;
@property(readonly, nonatomic) int state; // @dynamic state;
@property(readonly, copy, nonatomic) NSString *currentDefinition; // @dynamic currentDefinition;
@property(readonly, nonatomic) double duration; // @dynamic duration;
@property(readonly, nonatomic) double playableDuration; // @dynamic playableDuration;
- (_Bool)isPlayingADState;
- (long long)currentStatus;
- (void)p_ajustPlayerFrame;
- (id)getCurrentVideoScreenShot;
- (unsigned long long)playerCurrentStretchMode;
- (void)removePlayerFromView;
- (void)setLoadingImage:(id)arg1;
- (void)changeViewFrame:(struct CGRect)arg1;
- (void)refreshViews;
- (id)getSDKPlayerView;
- (void)attachToView:(id)arg1;
- (void)p_refreshViewsLevel;
- (void)addControlViewPlayerUI:(id)arg1;
- (void)close;
- (void)skipAd;
- (void)changeMuteMode:(_Bool)arg1;
- (void)setCategoryWithMute:(_Bool)arg1;
- (void)setLoopBack:(_Bool)arg1;
- (void)seekTo:(double)arg1;
- (void)pause;
- (void)play;
- (void)p_openMediaPlayerWithUrl:(id)arg1 playType:(int)arg2;
- (void)openMediaPlayerWithExternalUrl:(id)arg1;
- (void)openMediaPlayerWithLocalUrl:(id)arg1;
- (void)openMediaPlayerWithVideoID:(id)arg1 andPID:(id)arg2 isMultiStream:(_Bool)arg3;
- (void)openMediaPlayerWithVideoID:(id)arg1 mediaType:(long long)arg2 startPosition:(double)arg3 isMultiStream:(_Bool)arg4 coverId:(id)arg5;
- (void)openMediaPlayerWithVideoID:(id)arg1 mediaType:(long long)arg2 startPosition:(double)arg3 coverId:(id)arg4;
- (void)dealloc;
- (unsigned long long)viewAutoresizingMask;
- (void)cleanTVKPlayer;
- (void)initTVKPlayer;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

