//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CWebViewController.h"

#import "QNImageBrowserDelegate.h"
#import "QNNavigationControllerInteractiveGestureDelegate.h"
#import "QNShareActivityControllerDelegate.h"

@class NSArray, NSString, QNBarButton, QNEnlargeHitTestButton, QNListNewsItem, QNThemeMaskView, QNWebParam, QNWebViewLeftBarButton;

@interface CWebDetailViewController : CWebViewController <QNNavigationControllerInteractiveGestureDelegate, QNImageBrowserDelegate, QNShareActivityControllerDelegate>
{
    id _weakTarget;
    QNWebParam *_webViewParam;
    _Bool _nightMaskDisabled;
    _Bool _shareDisabled;
    _Bool _isWebViewDidFinishLoad;
    _Bool _isCustomNavigationBar;
    _Bool _isCrossArticle;
    _Bool _canSwipeBack;
    QNListNewsItem *_listItem;
    QNThemeMaskView *_maskView;
    NSString *_loginCallback;
    NSArray *_imageBrowserImagesInfo;
    NSString *_fromChannel;
    QNBarButton *_closeButton;
    QNWebViewLeftBarButton *_webviewLeftButton;
    QNEnlargeHitTestButton *_returnButton;
}

@property(retain, nonatomic) QNEnlargeHitTestButton *returnButton; // @synthesize returnButton=_returnButton;
@property(retain, nonatomic) QNWebViewLeftBarButton *webviewLeftButton; // @synthesize webviewLeftButton=_webviewLeftButton;
@property(retain, nonatomic) QNBarButton *closeButton; // @synthesize closeButton=_closeButton;
@property(copy, nonatomic) NSString *fromChannel; // @synthesize fromChannel=_fromChannel;
@property(nonatomic) _Bool canSwipeBack; // @synthesize canSwipeBack=_canSwipeBack;
@property(retain, nonatomic) NSArray *imageBrowserImagesInfo; // @synthesize imageBrowserImagesInfo=_imageBrowserImagesInfo;
@property(copy, nonatomic) NSString *loginCallback; // @synthesize loginCallback=_loginCallback;
@property(nonatomic) _Bool isCrossArticle; // @synthesize isCrossArticle=_isCrossArticle;
@property(nonatomic) _Bool isCustomNavigationBar; // @synthesize isCustomNavigationBar=_isCustomNavigationBar;
@property(readonly, nonatomic) _Bool isWebViewDidFinishLoad; // @synthesize isWebViewDidFinishLoad=_isWebViewDidFinishLoad;
@property(retain, nonatomic) QNThemeMaskView *maskView; // @synthesize maskView=_maskView;
@property(nonatomic) _Bool shareDisabled; // @synthesize shareDisabled=_shareDisabled;
@property(retain, nonatomic) QNListNewsItem *listItem; // @synthesize listItem=_listItem;
@property(nonatomic) _Bool nightMaskDisabled; // @synthesize nightMaskDisabled=_nightMaskDisabled;
@property(nonatomic) __weak id <CWebDetailViewControllerDelegate> weakTarget; // @synthesize weakTarget=_weakTarget;
- (void).cxx_destruct;
- (void)_handleImageBrowserFullscreen;
- (_Bool)qnNavigationController:(id)arg1 shouldInteractiveGestureRecognizerBegin:(id)arg2;
- (_Bool)isCustomNavigationBarStyle;
- (struct CGRect)imageBrowserWillDismissAtImageItem:(id)arg1;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (long long)do_webView:(id)arg1 decidedPolicyForNavigationAction:(id)arg2;
- (void)refreshContentData;
- (id)getCurrentNavigationController;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)refreshCurrentPage;
- (id)getCustomDeletedShareItems;
- (id)getCustomShareInfo;
- (id)getShareToEmailInfo;
- (void)p_updateBackAndcloseButton;
- (void)p_backHybrid:(void *)arg1;
- (void)p_webviewClose:(void *)arg1;
- (void)p_configNavigationBar;
- (void)onStatusBarWindowTapEnd:(id)arg1;
- (_Bool)shouldCleanCacheBeforeLoadRequest;
- (void)onBack:(id)arg1;
- (void)onAction:(id)arg1;
- (void)configBarButtons;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithParam:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

