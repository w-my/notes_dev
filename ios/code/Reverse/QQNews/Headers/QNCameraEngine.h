//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVCaptureDevice, AVCaptureDeviceInput, AVCapturePhotoSettings, AVCaptureSession, AVCaptureVideoPreviewLayer, NSObject<OS_dispatch_queue>, QNCameraEngineCaptureOutput, QNCameraEngineDevice, QNCameraEngineDeviceInput;

@interface QNCameraEngine : NSObject
{
    _Bool _rotationCamera;
    long long _mode;
    long long _torchMode;
    long long _flashMode;
    long long _focusMode;
    NSObject<OS_dispatch_queue> *_sessionQueue;
    AVCaptureVideoPreviewLayer *_previewLayer;
    AVCaptureSession *_session;
    QNCameraEngineDevice *_cameraDevice;
    QNCameraEngineDeviceInput *_cameraInput;
    QNCameraEngineCaptureOutput *_cameraOutput;
    AVCapturePhotoSettings *_capturePhotoSettings;
    AVCaptureDeviceInput *_captureDeviceIntput;
}

+ (_Bool)isCameraEngineAudioAvailable;
+ (_Bool)isCameraEngineVideoAvailable;
+ (long long)askAuthorization;
@property(retain, nonatomic) AVCaptureDeviceInput *captureDeviceIntput; // @synthesize captureDeviceIntput=_captureDeviceIntput;
@property(retain, nonatomic) AVCapturePhotoSettings *capturePhotoSettings; // @synthesize capturePhotoSettings=_capturePhotoSettings;
@property(retain, nonatomic) QNCameraEngineCaptureOutput *cameraOutput; // @synthesize cameraOutput=_cameraOutput;
@property(retain, nonatomic) QNCameraEngineDeviceInput *cameraInput; // @synthesize cameraInput=_cameraInput;
@property(retain, nonatomic) QNCameraEngineDevice *cameraDevice; // @synthesize cameraDevice=_cameraDevice;
@property(retain, nonatomic) AVCaptureSession *session; // @synthesize session=_session;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(nonatomic) _Bool rotationCamera; // @synthesize rotationCamera=_rotationCamera;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property(nonatomic) long long focusMode; // @synthesize focusMode=_focusMode;
@property(nonatomic) long long flashMode; // @synthesize flashMode=_flashMode;
@property(nonatomic) long long torchMode; // @synthesize torchMode=_torchMode;
@property(nonatomic) long long mode; // @synthesize mode=_mode;
- (void).cxx_destruct;
- (void)p_configureOutputDevice;
- (void)p_configureInputDevice;
- (void)p_handleDeviceOrientation;
- (void)p_config;
- (void)p_setupSession;
- (void)runBlockOnSessionQueue:(CDUnknownBlockType)arg1;
- (void)stopRecordingVideo;
- (void)startRecordingVideo:(id)arg1 blockCompletion:(CDUnknownBlockType)arg2;
- (void)capturePhotoBuffer:(CDUnknownBlockType)arg1;
- (void)capturePhoto:(CDUnknownBlockType)arg1;
- (void)focusAtPoint:(struct CGPoint)arg1;
- (void)switchCurrentDevice;
- (void)changeCurrentDevice:(long long)arg1;
- (void)stopSessionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)stopSession;
- (void)startSessionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)startSession;
- (void)setVideoOutputSettingsPreset:(long long)arg1;
@property(readonly, nonatomic) _Bool isRunning;
@property(readonly, nonatomic) _Bool isInterrupted;
@property(readonly, nonatomic) _Bool isRecording;
@property(readonly, nonatomic) AVCaptureDevice *captureDevice;
@property(nonatomic) long long devicePosition;
- (void)setBlockCompletionProgress:(CDUnknownBlockType)arg1;
- (void)setBlockCompletionBuffer:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

