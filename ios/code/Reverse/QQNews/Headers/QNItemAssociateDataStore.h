//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "QNAbstractLevelDBDataStore.h"

@class QNTwoLevelsCache;

@interface QNItemAssociateDataStore : QNAbstractLevelDBDataStore
{
    QNTwoLevelsCache *_sharableObjectCache;
}

+ (id)nameOfDB;
- (void).cxx_destruct;
- (id)p_keyForAudioItemLocalIdWithUrl:(id)arg1;
- (id)p_keyForAudioItemSaveTimes;
- (id)p_keyForAudioItem:(id)arg1;
- (void)_updateAudioItemSaveTime;
- (void)_removeAudioItemUrlMap:(id)arg1;
- (void)_updateAudioItemUrlMap:(id)arg1;
- (long long)getAudioItemSaveTimes;
- (void)removeAudioItem:(id)arg1;
- (id)getAudioItemByAudioUrl:(id)arg1;
- (id)getAudioItemByLocalId:(id)arg1;
- (_Bool)saveAudioItem:(id)arg1;
- (id)p_keyForPushDislikeState:(id)arg1;
- (long long)pushDislikeTypeForItemId:(id)arg1;
- (void)savePushDislikeType:(long long)arg1 forItemId:(id)arg2;
- (id)p_keyForUnfoldState:(id)arg1;
- (_Bool)hasUnfoldForItemId:(id)arg1;
- (void)saveHasUnfold:(_Bool)arg1 forItemId:(id)arg2;
- (id)p_keyForSupportState:(id)arg1;
- (_Bool)hasSupportedForItemId:(id)arg1;
- (void)saveHasSupported:(_Bool)arg1 forItemId:(id)arg2;
- (id)p_keyForMyNewsHasRead;
- (id)getMyNewsHasReadList;
- (void)removeMyNewsHasRead;
- (_Bool)checkMyNewsHasRead:(id)arg1;
- (id)p_keyForVideoPlayedTime:(id)arg1;
- (void)removeVideo:(id)arg1;
- (id)playedItemForVideo:(id)arg1;
- (void)savePlayedTime:(double)arg1 video:(id)arg2;
- (id)p_keyForLastReadPosition:(id)arg1;
- (void)clearMyRecommendNewsInfo;
- (id)getMyRecommendNewsInfo;
- (void)saveMyRecommendNewsInfo:(id)arg1;
- (id)p_keyForMyRecommendNewsInfo;
- (void)clearLiveReservationInfo;
- (id)getLiveReservationInfo;
- (void)saveLiveReservationInfo:(id)arg1;
- (id)p_keyForLiveReservationInfo;
- (void)clearAppPromotionDataByVid:(id)arg1;
- (id)getAppPromotionNodeByVid:(id)arg1;
- (void)saveAppPromotionNode:(id)arg1;
- (id)p_keyForAppPromotionNodeData:(id)arg1;
- (void)clearListItemChangeInfoCommonByArticleId:(id)arg1;
- (id)getListItemChangeInfoCommonByArticleId:(id)arg1;
- (void)saveListItemChangeInfoCommon:(id)arg1;
- (id)p_keyForListItemChangeInfoCommon:(id)arg1;
- (void)clearGiftNodeDataByGiftId:(id)arg1;
- (id)getGiftNodeByGiftId:(id)arg1;
- (void)saveGiftNode:(id)arg1;
- (id)p_keyForGiftNodeData:(id)arg1;
- (void)clearRecommendNodeDataByArticleId:(id)arg1;
- (id)getRecommendNodeByArticleId:(id)arg1;
- (void)saveRecommendNode:(id)arg1;
- (id)p_keyForRecommendNodeData:(id)arg1;
- (id)roseLiveStatusForItemID:(id)arg1;
- (void)saveRoseLiveStatus:(id)arg1 forItemID:(id)arg2;
- (id)p_keyForRoseLiveStatus:(id)arg1;
- (id)p_keyForPictureItemLocalSupportNumber:(id)arg1;
- (id)p_keyForPictureItemExtras:(id)arg1;
- (long long)localPictureItemSupportStateForItemID:(id)arg1;
- (void)saveLocalPictureListItemSupportState:(long long)arg1 itemID:(id)arg2;
- (id)extrasForPictureListItemID:(id)arg1;
- (void)savePictureListItemExtras:(id)arg1;
- (void)removeLastReadPositionForItemID:(id)arg1;
- (id)lastReadPositionForItemID:(id)arg1;
- (void)saveLastReadPosition:(id)arg1;
- (id)getExpidForNewsID:(id)arg1;
- (void)saveExpid:(id)arg1 forNewsID:(id)arg2;
- (void)clearInternalCaches;
- (id)initWithDB:(id)arg1;

@end

