//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSString, NSTimer, QNVideoDanmuApi, QNVideoDanmuPublishApi, QNVideoDanmuRegisterApi;

@interface QNVideoDanmuManager : NSObject
{
    CDUnknownBlockType _loadFinishBlock;
    CDUnknownBlockType _updateBlock;
    QNVideoDanmuApi *_danmuApi;
    QNVideoDanmuPublishApi *_publishApi;
    QNVideoDanmuRegisterApi *_registerApi;
    double _lastTimestamp;
    double _autoUpdateInterval;
    NSTimer *_autoUpdateTimer;
    NSString *_currentSessionKey;
    NSString *_currentDanmuId;
    NSString *_currentTargetId;
}

@property(copy, nonatomic) NSString *currentTargetId; // @synthesize currentTargetId=_currentTargetId;
@property(copy, nonatomic) NSString *currentDanmuId; // @synthesize currentDanmuId=_currentDanmuId;
@property(copy, nonatomic) NSString *currentSessionKey; // @synthesize currentSessionKey=_currentSessionKey;
@property(retain, nonatomic) NSTimer *autoUpdateTimer; // @synthesize autoUpdateTimer=_autoUpdateTimer;
@property(nonatomic) double autoUpdateInterval; // @synthesize autoUpdateInterval=_autoUpdateInterval;
@property(nonatomic) double lastTimestamp; // @synthesize lastTimestamp=_lastTimestamp;
@property(retain, nonatomic) QNVideoDanmuRegisterApi *registerApi; // @synthesize registerApi=_registerApi;
@property(retain, nonatomic) QNVideoDanmuPublishApi *publishApi; // @synthesize publishApi=_publishApi;
@property(retain, nonatomic) QNVideoDanmuApi *danmuApi; // @synthesize danmuApi=_danmuApi;
@property(copy, nonatomic) CDUnknownBlockType updateBlock; // @synthesize updateBlock=_updateBlock;
@property(copy, nonatomic) CDUnknownBlockType loadFinishBlock; // @synthesize loadFinishBlock=_loadFinishBlock;
- (void).cxx_destruct;
- (void)p_publishDanmu:(id)arg1 atTimestamp:(double)arg2 isLive:(_Bool)arg3;
- (void)p_updateDanmu;
- (void)p_stopAutoUpdate;
- (void)p_startAutoUpdate;
- (void)p_resetAutoUpdateInterval:(long long)arg1;
- (void)p_loadDanmu:(id)arg1 isLive:(_Bool)arg2 playbackTimestamp:(double)arg3;
- (void)p_registerDanmu:(id)arg1 isLive:(_Bool)arg2 finishBlock:(CDUnknownBlockType)arg3;
- (void)publishLiveDanmu:(id)arg1;
- (void)publishDanmu:(id)arg1 atTimestamp:(double)arg2;
- (void)registerLiveDanmu:(id)arg1 finishBlock:(CDUnknownBlockType)arg2;
- (void)registerDanmu:(id)arg1 finishBlock:(CDUnknownBlockType)arg2;
- (void)stopLoad;
- (void)loadLiveDanmu;
- (void)loadDanmuAtPlaybackTimestamp:(double)arg1;
- (void)dealloc;
- (id)init;

@end

