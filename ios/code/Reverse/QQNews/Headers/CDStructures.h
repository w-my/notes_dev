//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMREncodeFloat {
    void *_field1;
};

struct AppInfo {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
};

struct AppSession {
    basic_string_90719d97 _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
};

struct Attachment {
    char _field1;
    basic_string_90719d97 _field2;
    vector_aa1d262e _field3;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long mStartOffset;
    unsigned int mVariableFramesInPacket;
    unsigned int mDataByteSize;
};

struct AuthToken {
    int _field1;
    vector_a7fb0c12 _field2;
    vector_a7fb0c12 _field3;
    int _field4;
};

struct CAStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CSRSA {
    vector_aa1d262e _field1;
};

struct CSReportInfo {
    int _field1;
    struct vector<MMGRReport::ReportRecord, std::__1::allocator<MMGRReport::ReportRecord>> _field2;
};

struct Cache;

struct CachedFailedData {
    _Bool wasCachedFailed;
    long long failedCacheOrder;
};

struct ClientPush {
    long long _field1;
};

struct ClientSashimi {
    int _field1;
    int _field2;
    int _field3;
    vector_aa1d262e _field4;
    long long _field5;
    int _field6;
    int _field7;
    struct ClientPush _field8;
    int _field9;
};

struct Comparator;

struct DB {
    CDUnknownFunctionPointerType *_field1;
};

struct DNSCache;

struct Env;

struct ExceptionUpload {
    basic_string_90719d97 _field1;
    long long _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field8;
    basic_string_90719d97 _field9;
    struct AppSession _field10;
    int _field11;
    basic_string_90719d97 _field12;
    basic_string_90719d97 _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> _field17;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field18;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field19;
    basic_string_90719d97 _field20;
    _Bool _field21;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> _field1;
};

struct FileCommitReq {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    vector_a7fb0c12 _field3;
    basic_string_1cdf7af0 _field4;
};

struct FileControlReq {
    basic_string_1cdf7af0 _field1;
    struct AuthToken _field2;
    basic_string_1cdf7af0 _field3;
    basic_string_1cdf7af0 _field4;
    int _field5;
    long long _field6;
    struct stEnvironment _field7;
    int _field8;
    vector_a7fb0c12 _field9;
    basic_string_1cdf7af0 _field10;
    _Bool _field11;
    int _field12;
};

struct FileUploadControlReq {
    vector_a7fb0c12 _field1;
};

struct FilterPolicy;

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
    _Bool useDepth;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct HFGLTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int glFormat;
    unsigned int iosFormat;
    unsigned int type;
};

struct HttpClient {
    struct Socket _field1;
    struct HttpResponse *_field2;
    struct HttpRequest *_field3;
    struct SocketAsyncEventArgs *_field4;
    basic_string_90719d97 _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    CDUnknownFunctionPointerType _field7;
    int _field8;
    int _field9;
    struct MutexLock _field10;
    int _field11;
};

struct HttpRequest {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
    basic_string_90719d97 _field8;
    basic_string_90719d97 _field9;
};

struct HttpResponse {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    char *_field5;
    _Bool _field6;
};

struct IPlayerWrapper;

struct ISpeechEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct IosUserInfo {
    int guidVersion;
    int phoneType;
    int subPlatform;
    int product;
    basic_string_90719d97 uuid;
    basic_string_90719d97 identifierForVendor;
    basic_string_90719d97 advertisingIdentifier;
    basic_string_90719d97 mac;
    struct ProductVersion version;
    basic_string_90719d97 deviceModel;
    basic_string_90719d97 firmware;
    short breakFlag;
    basic_string_90719d97 channel;
    basic_string_90719d97 lc;
    basic_string_90719d97 token;
    basic_string_90719d97 udid;
};

struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceInputStream<taf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<taf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct Logger;

struct Loop {
    struct Thread _field1;
    struct MutexLock _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    struct vector<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> _field7;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _field8;
};

struct MixPkg {
    struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> _field1;
};

struct MultiPicInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct MutexLock {
    struct _opaque_pthread_mutex_t _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NWAVRequestParameter {
    int _field1;
};

struct NWAVRequestParameter_OPEN {
    int _field1;
    id _field2;
    id _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned int _field6;
    int _field7;
};

struct NWIAVPlayJitterSink {
    CDUnknownFunctionPointerType *_field1;
};

struct NetworkConditionEntry;

struct OpaqueAudioFileStreamID;

struct OpaqueAudioQueue;

struct OpaqueAudioQueueTimeline;

struct Options {
    struct Comparator *comparator;
    _Bool create_if_missing;
    _Bool error_if_exists;
    _Bool paranoid_checks;
    struct Env *env;
    struct Logger *info_log;
    unsigned long long write_buffer_size;
    int max_open_files;
    struct Cache *block_cache;
    unsigned long long block_size;
    int block_restart_interval;
    unsigned long long max_file_size;
    int compression;
    _Bool reuse_logs;
    struct FilterPolicy *filter_policy;
};

struct PCMFifoBuffer;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PicExtendInfo {
    int _field1;
    struct vector<UploadSDK::FileUpload::QuanInfo, std::allocator<UploadSDK::FileUpload::QuanInfo>> _field2;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field3;
    basic_string_1cdf7af0 _field4;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field5;
};

struct PreuploadPicInfo {
    struct UploadPicInfoReq _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    long long _field4;
    int _field5;
    int _field6;
    basic_string_1cdf7af0 _field7;
    basic_string_1cdf7af0 _field8;
    int _field9;
    int _field10;
    long long _field11;
};

struct ProductVersion {
    int pversion;
    int cversion;
    int hotfix;
};

struct QNPair {
    Class _field1;
};

struct QNTriple {
    Class _field1;
};

struct QNWebViewSettings {
    _Bool autoScrollToTopWhenTapStatusBar;
    _Bool removeCacheBeforeLoadRequest;
    _Bool enableAutoFontSizeAdjust;
};

struct QuanInfo;

struct RTMP;

struct RTMPChunk;

struct RTMPInputStream {
    basic_string_90719d97 _field1;
    int _field2;
    struct RTMP *_field3;
    _Bool _field4;
    _Bool _field5;
    char *_field6;
};

struct RTMPPacket {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    int _field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct RTMPChunk *_field9;
    char *_field10;
};

struct ReportRecord;

struct RequestPkg {
    int _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    int _field7;
    vector_aa1d262e _field8;
    basic_string_90719d97 _field9;
    basic_string_90719d97 _field10;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field11;
    basic_string_90719d97 _field12;
    long long _field13;
    basic_string_90719d97 _field14;
    basic_string_90719d97 _field15;
    basic_string_90719d97 _field16;
    long long _field17;
    basic_string_90719d97 _field18;
    basic_string_90719d97 _field19;
    basic_string_90719d97 _field20;
    basic_string_90719d97 _field21;
    basic_string_90719d97 _field22;
    basic_string_90719d97 _field23;
    basic_string_90719d97 _field24;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    vector_aa1d262e _field3;
    basic_string_90719d97 _field4;
    long long _field5;
    basic_string_90719d97 _field6;
    basic_string_90719d97 _field7;
};

struct SCRSA {
    basic_string_90719d97 _field1;
};

struct ServerPush {
    long long _field1;
};

struct ServerSashimi {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    vector_aa1d262e _field6;
    struct ServerPush _field7;
    int _field8;
};

struct ShuoshuoInfoReq {
    basic_string_1cdf7af0 _field1;
    int _field2;
    long long _field3;
    vector_a7fb0c12 _field4;
    struct vector<UploadSDK::FileUpload::ShuoshuoPicInfo, std::allocator<UploadSDK::FileUpload::ShuoshuoPicInfo>> _field5;
};

struct Slice {
    char *_field1;
    unsigned long long _field2;
};

struct Socket {
    int _field1;
    _Bool _field2;
    struct sockaddr_in6 _field3;
    struct Loop *_field4;
    int _field5;
    struct DNSCache _field6;
};

struct SocketAsyncEventArgs;

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct Status {
    char *_field1;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
    basic_string_90719d97 _field7;
    _Bool _field8;
};

struct SvcRequestHead {
    short _field1;
    long long _field2;
    basic_string_1cdf7af0 _field3;
    int _field4;
    vector_a7fb0c12 _field5;
    int _field6;
    int _field7;
    basic_string_1cdf7af0 _field8;
    basic_string_1cdf7af0 _field9;
    long long _field10;
    long long _field11;
    int _field12;
    basic_string_1cdf7af0 _field13;
    int _field14;
    int _field15;
    int _field16;
    vector_a7fb0c12 _field17;
    int _field18;
    basic_string_1cdf7af0 _field19;
    basic_string_1cdf7af0 _field20;
    long long _field21;
    int _field22;
    int _field23;
    int _field24;
    basic_string_1cdf7af0 _field25;
    int _field26;
    int _field27;
    basic_string_1cdf7af0 _field28;
    int _field29;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field30;
    int _field31;
    basic_string_1cdf7af0 _field32;
    struct WeiyunUpload _field33;
    int _field34;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field35;
};

struct TRSILK {
    struct _opaque_pthread_mutex_t mutex;
    struct PCMFifoBuffer *pFifo;
    struct PCMFifoBuffer *pEncFifo;
    int nIsFirst;
    int nIsFirstHead;
    short nBytesPerPacket[3];
    CDStruct_183601bc *pDecControl;
    CDStruct_183601bc *pEncControl;
    void *psDec;
    void *psEnc;
    char *payload;
};

struct TVExternalSubWrapper;

struct TVKAudioData {
    char *data;
    unsigned int len;
    long long duration;
    struct TVKAudioData *next;
};

struct TVKAudioDataQueue {
    CDUnknownFunctionPointerType *_field1;
    struct TVKAudioData *_field2;
    struct TVKAudioData *_field3;
    int _field4;
    _Bool _field5;
    struct _opaque_pthread_mutex_t _field6;
    struct _opaque_pthread_cond_t _field7;
};

struct TVKSelfPlayerWrapper {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    id _field3;
    struct IPlayerWrapper *_field4;
};

struct TVKSubTitleAdapter {
    CDUnknownFunctionPointerType *_field1;
    struct TVExternalSubWrapper *_field2;
    id _field3;
};

struct Thread {
    struct _opaque_pthread_t *_field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
    _Bool _field4;
    _Bool _field5;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UniPacket<taf::BufferWriter, taf::BufferReader, std::allocator> {
    short _field1;
    char _field2;
    int _field3;
    int _field4;
    basic_string_1cdf7af0 _field5;
    basic_string_1cdf7af0 _field6;
    vector_a7fb0c12 _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field10;
    struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field11;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field12;
    short _field13;
    struct JceInputStream<taf::BufferReader> _field14;
    struct JceOutputStream<taf::BufferWriter> _field15;
};

struct UploadPicInfoReq {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    basic_string_1cdf7af0 _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    long long _field9;
    struct MultiPicInfo _field10;
    struct PicExtendInfo _field11;
    basic_string_1cdf7af0 _field12;
    int _field13;
    int _field14;
    int _field15;
    basic_string_1cdf7af0 _field16;
    basic_string_1cdf7af0 _field17;
    basic_string_1cdf7af0 _field18;
    basic_string_1cdf7af0 _field19;
    basic_string_1cdf7af0 _field20;
    basic_string_1cdf7af0 _field21;
    basic_string_1cdf7af0 _field22;
    int _field23;
    long long _field24;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field25;
    int _field26;
    struct stPoi _field27;
    struct stWaterTemplate _field28;
    basic_string_1cdf7af0 _field29;
    int _field30;
    vector_a7fb0c12 _field31;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field32;
};

struct UploadPicInfoRsp {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    basic_string_1cdf7af0 _field4;
    basic_string_1cdf7af0 _field5;
    int _field6;
    int _field7;
    basic_string_1cdf7af0 _field8;
    int _field9;
    int _field10;
    basic_string_1cdf7af0 _field11;
    int _field12;
    basic_string_1cdf7af0 _field13;
    basic_string_1cdf7af0 _field14;
    basic_string_1cdf7af0 _field15;
    basic_string_1cdf7af0 _field16;
    basic_string_1cdf7af0 _field17;
    struct stWaterTemplate _field18;
    int _field19;
    vector_a7fb0c12 _field20;
};

struct UploadReq {
    unsigned int _field1;
    int _field2;
    unsigned short _field3;
    vector_a7fb0c12 _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    vector_a7fb0c12 _field9;
};

struct UploadUpsInfoReq {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    int _field3;
    vector_a7fb0c12 _field4;
    int _field5;
    int _field6;
    char _field7;
    int _field8;
    int _field9;
    long long _field10;
    basic_string_1cdf7af0 _field11;
    unsigned int _field12;
    unsigned int _field13;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field14;
};

struct UploadUpsInfoRsp {
    int _field1;
    vector_a7fb0c12 _field2;
    basic_string_1cdf7af0 _field3;
    int _field4;
    int _field5;
    int _field6;
    struct map<unsigned int, std::basic_string<char>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> _field7;
};

struct UploadVideoInfoReq {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    int _field3;
    long long _field4;
    int _field5;
    vector_a7fb0c12 _field6;
    int _field7;
    basic_string_1cdf7af0 _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct UseInfo {
    long long prevActiveTime;
    long long prevInActiveTime;
    long long prevUseTime;
    _Bool isCrashed;
};

struct UserInfoPackage {
    char _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct VRPointF {
    float _field1;
    float _field2;
};

struct VideoAudioSyncInfo {
    unsigned long long n64UserId;
    unsigned int dwVideoTimestamp;
    unsigned int dwAudioTimeStamp;
    int bEnable;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WXVoiceEngine {
    struct Loop _field1;
    struct HttpRequest _field2;
    struct HttpResponse _field3;
    struct HttpClient _field4;
};

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct WeiyunUpload {
    vector_a7fb0c12 _field1;
    vector_a7fb0c12 _field2;
    basic_string_1cdf7af0 _field3;
    basic_string_1cdf7af0 _field4;
    unsigned int _field5;
};

struct WriteBatch {
    basic_string_90719d97 _field1;
};

struct WriteOptions {
    _Bool _field1;
};

struct _Alloc_hider {
    char *_field1;
};

struct _DDRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _Image {
    char *_field1;
    unsigned long long _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct _ImageMarker *_field9;
};

struct _ImageInfo {
    int flag;
    int orientation;
    double overallScale;
    struct CGSize size;
};

struct _ImageMarker;

struct _MidasStuKeyProcessor {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NWVideoRenderData {
    long long _field1;
};

struct _NWVideoRenderParameter {
    long long _field1;
    long long _field2;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _QZEVMediaTime {
    double value;
    double timestamp;
};

struct _QZEVMediaTimeAnchor {
    double _field1;
    long long _field2;
};

struct _QZEVMediaTimeRange {
    double _field1;
    double _field2;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<unsigned int, std::pair<const unsigned int, std::basic_string<char>>, std::_Select1st<std::pair<const unsigned int, std::basic_string<char>>>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<unsigned int>, false> _field1;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<unsigned int>, false> {
    struct less<unsigned int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _field1;
    struct _Rb_tree_node_base *_field2;
    struct _Rb_tree_node_base *_field3;
    struct _Rb_tree_node_base *_field4;
};

struct _RecoverConfig {
    unsigned int _field1;
    _Bool _field2;
    unsigned int _field3;
    unsigned int _field4;
    _Bool _field5;
};

struct _Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _SharpPOutFrame {
    char *pOutBuf;
    int bufsize;
    int dstWidth;
    int dstHeight;
    int fmt;
    int delayTime;
};

struct _TRSpeexEncodeContex {
    void *st;
    struct SpeexBits bits;
    int frame_size;
    struct PCMFifoBuffer *pFifo;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> *__next_;
};

struct __list_node_base<ImageNode *, void *> {
    struct __list_node_base<ImageNode *, void *> *__prev_;
    struct __list_node_base<ImageNode *, void *> *__next_;
};

struct __list_node_base<wxvoice::SocketAsyncEventArgs *, void *> {
    struct __list_node_base<wxvoice::SocketAsyncEventArgs *, void *> *_field1;
    struct __list_node_base<wxvoice::SocketAsyncEventArgs *, void *> *_field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _axisDescription {
    double axis;
    unsigned char edge;
};

struct _axisPoint {
    struct _axisDescription x;
    struct _axisDescription y;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct cSmartPtr<download_manager::iDownloadRecord> {
    struct iDownloadRecord *mPtr;
};

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct engine_st;

struct iDownloadRecord;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct less<std::basic_string<char>>;

struct less<unsigned int>;

struct list<ImageNode *, std::__1::allocator<ImageNode *>> {
    struct __list_node_base<ImageNode *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<ImageNode *, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct __list_node_base<wxvoice::SocketAsyncEventArgs *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<wxvoice::SocketAsyncEventArgs *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, ImagePointer *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ImagePointer *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, ImagePointer *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ImagePointer *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, ImagePointer *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, ImagePointer *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ImagePointer *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field1;
};

struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<unsigned int, std::basic_string<char>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> {
    struct _Rb_tree<unsigned int, std::pair<const unsigned int, std::basic_string<char>>, std::_Select1st<std::pair<const unsigned int, std::basic_string<char>>>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> _field1;
};

struct network_info {
    char _field1[18];
    char _field2[50];
    char _field3[50];
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<long, std::__1::less<long>, std::__1::allocator<long>> {
    struct __tree<long, std::__1::less<long>, std::__1::allocator<long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stEnvironment {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    int _field3;
    basic_string_1cdf7af0 _field4;
    unsigned int _field5;
    basic_string_1cdf7af0 _field6;
    int _field7;
    int _field8;
    basic_string_1cdf7af0 _field9;
};

struct stPoi {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    basic_string_1cdf7af0 _field4;
    basic_string_1cdf7af0 _field5;
    int _field6;
    int _field7;
};

struct stResult {
    int _field1;
    int _field2;
    basic_string_1cdf7af0 _field3;
};

struct stWaterTemplate {
    basic_string_1cdf7af0 _field1;
    basic_string_1cdf7af0 _field2;
};

struct stack_st_void;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<long, CGRect, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, CGRect>>> {
    struct __hash_table<std::__1::__hash_value_type<long, CGRect>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, CGRect>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, CGRect>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, CGRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, CGRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, CGRect>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, CGRect>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, __weak id, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, __weak id>>> {
    struct __hash_table<std::__1::__hash_value_type<long, __weak id>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, __weak id>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, __weak id>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, __weak id>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, __weak id>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, __weak id>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, __weak id>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, id, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, id>>> {
    struct __hash_table<std::__1::__hash_value_type<long, id>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, id>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, id>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, id>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, id>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, id>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, id>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, long>>> {
    struct __hash_table<std::__1::__hash_value_type<long, long>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<MMGRReport::ReportRecord, std::__1::allocator<MMGRReport::ReportRecord>> {
    struct ReportRecord *_field1;
    struct ReportRecord *_field2;
    struct __compressed_pair<MMGRReport::ReportRecord *, std::__1::allocator<MMGRReport::ReportRecord>> {
        struct ReportRecord *_field1;
    } _field3;
};

struct vector<UploadSDK::FileUpload::QuanInfo, std::allocator<UploadSDK::FileUpload::QuanInfo>> {
    struct _Vector_impl {
        struct QuanInfo *_field1;
        struct QuanInfo *_field2;
        struct QuanInfo *_field3;
    } _field1;
};

struct vector<UploadSDK::FileUpload::ShuoshuoPicInfo, std::allocator<UploadSDK::FileUpload::ShuoshuoPicInfo>> {
    struct _Vector_impl {
        struct ShuoshuoPicInfo *_field1;
        struct ShuoshuoPicInfo *_field2;
        struct ShuoshuoPicInfo *_field3;
    } _field1;
};

struct vector<__weak id, std::__1::allocator<__weak id>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id *, std::__1::allocator<__weak id>> {
        id *__value_;
    } __end_cap_;
};

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<qnutils::NetworkConditionEntry, std::__1::allocator<qnutils::NetworkConditionEntry>> {
    struct NetworkConditionEntry *__begin_;
    struct NetworkConditionEntry *__end_;
    struct __compressed_pair<qnutils::NetworkConditionEntry *, std::__1::allocator<qnutils::NetworkConditionEntry>> {
        struct NetworkConditionEntry *__value_;
    } __end_cap_;
};

struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> {
    struct AppInfo *_field1;
    struct AppInfo *_field2;
    struct __compressed_pair<rqd::AppInfo *, std::__1::allocator<rqd::AppInfo>> {
        struct AppInfo *_field1;
    } _field3;
};

struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> {
    struct Attachment *_field1;
    struct Attachment *_field2;
    struct __compressed_pair<rqd::Attachment *, std::__1::allocator<rqd::Attachment>> {
        struct Attachment *_field1;
    } _field3;
};

struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> {
    struct ExceptionUpload *_field1;
    struct ExceptionUpload *_field2;
    struct __compressed_pair<rqd::ExceptionUpload *, std::__1::allocator<rqd::ExceptionUpload>> {
        struct ExceptionUpload *_field1;
    } _field3;
};

struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> {
    struct SummaryInfo *_field1;
    struct SummaryInfo *_field2;
    struct __compressed_pair<rqd::SummaryInfo *, std::__1::allocator<rqd::SummaryInfo>> {
        struct SummaryInfo *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct SocketAsyncEventArgs **_field1;
    struct SocketAsyncEventArgs **_field2;
    struct __compressed_pair<wxvoice::SocketAsyncEventArgs **, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> {
        struct SocketAsyncEventArgs **_field1;
    } _field3;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool shouldHideNavigationBar;
    _Bool shouldHideTabBar;
    _Bool shouldDisableExtendedLayout;
    _Bool shouldDisableAutomaticallyAdjustsScrollViewInsets;
    _Bool shouldUpdateContainerStates;
    double hintedTopInset;
    double hintedBottomInset;
    unsigned long long navigationBarStyle;
    long long statusBarStyle;
    long long shimmerViewType;
    long long shimmerBottomTipViewOffsetType;
    unsigned long long shadowOption;
} CDStruct_7ff836d1;

typedef struct {
    _Bool useSystemCache;
    unsigned long long configMasks;
} CDStruct_23a4b626;

typedef struct {
    _Bool _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    int _field18;
    float _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    unsigned int _field37;
    unsigned int _field38;
} CDStruct_5164b2cd;

typedef struct {
    unsigned char _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned char _field6;
    unsigned short _field7;
    char _field8[1];
    unsigned int _field9;
} CDStruct_a53ae8cd;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    int _field2;
} CDStruct_b54abf8e;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char cEncryptType;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_7a5a57b9;

typedef struct {
    char acHostName[32];
    unsigned short wPort;
    unsigned short wTimeout;
} CDStruct_93d23b61;

typedef struct {
    double doubleValue;
    unsigned char dLength;
} CDStruct_34c354e6;

typedef struct {
    double red;
    double green;
    double blue;
    double alpha;
} CDStruct_3ead2808;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
} CDStruct_b560da7d;

typedef struct {
    int isNewInstall;
    int isUpdateFromLowAppVersion;
    int wasCrashedLastLaunch;
    int wasUserForceTerminate;
    int isOSVersionDifferentFromLastLaunch;
    int wasAppInBackground;
} CDStruct_64308e42;

typedef struct {
    int red;
    int green;
    int blue;
} CDStruct_dcb0dccc;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct CDStruct_183601bc;

typedef struct {
    long long _field1;
    struct UIEdgeInsets _field2;
} CDStruct_55d1109d;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

// Template types
typedef struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceInputStream_f07640a9;

typedef struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceOutputStream_31132a5e;

typedef struct UniPacket<taf::BufferWriter, taf::BufferReader, std::allocator> {
    short _field1;
    char _field2;
    int _field3;
    int _field4;
    basic_string_1cdf7af0 _field5;
    basic_string_1cdf7af0 _field6;
    vector_a7fb0c12 _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field10;
    struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field11;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field12;
    short _field13;
    struct JceInputStream<taf::BufferReader> _field14;
    struct JceOutputStream<taf::BufferWriter> _field15;
} UniPacket_1fa1d691;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
} basic_string_1cdf7af0;

typedef struct cSmartPtr<download_manager::iDownloadRecord> {
    struct iDownloadRecord *mPtr;
} cSmartPtr_bf8fc06d;

typedef struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
} vector_aa1d262e;

typedef struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
} vector_a7fb0c12;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
        float _field10;
        float _field11;
        float _field12;
        float _field13;
        float _field14;
        float _field15;
        float _field16;
    } _field1;
    float _field2[16];
};

